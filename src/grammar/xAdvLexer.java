// Generated from xAdv.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class xAdvLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, AutomatonProperty=7, ViewportProperty=8, 
		Value=9, WS=10, INT=11, NEWLINE=12, ID=13, SingleLineComment=14, BlockComment=15;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "AutomatonProperty", 
			"ViewportProperty", "Value", "WS", "INT", "NEWLINE", "ID", "SingleLineComment", 
			"BlockComment"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'import'", "'automaton {'", "':'", "'}'", "'{'", "'viewport {'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "AutomatonProperty", "ViewportProperty", 
			"Value", "WS", "INT", "NEWLINE", "ID", "SingleLineComment", "BlockComment"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public xAdvLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "xAdv.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000f\u00b6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006_\b\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0003\u0007{\b\u0007\u0001\b\u0001\b\u0003\b\u007f\b\b\u0001"+
		"\t\u0004\t\u0082\b\t\u000b\t\f\t\u0083\u0001\t\u0001\t\u0001\n\u0001\n"+
		"\u0005\n\u008a\b\n\n\n\f\n\u008d\t\n\u0001\u000b\u0003\u000b\u0090\b\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0005"+
		"\f\u0098\b\f\n\f\f\f\u009b\t\f\u0001\r\u0001\r\u0001\r\u0005\r\u00a0\b"+
		"\r\n\r\f\r\u00a3\t\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0005\u000e\u00ad\b\u000e\n\u000e\f\u000e"+
		"\u00b0\t\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0002\u00a1\u00ae\u0000\u000f\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u0001\u0000\u0006\u0002\u0000"+
		"\t\t  \u0001\u000019\u0001\u000009\u0002\u0000AZaz\u0003\u000009AZaz\u0001"+
		"\u0000//\u00c2\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0001\u001f\u0001\u0000\u0000\u0000"+
		"\u0003&\u0001\u0000\u0000\u0000\u00052\u0001\u0000\u0000\u0000\u00074"+
		"\u0001\u0000\u0000\u0000\t6\u0001\u0000\u0000\u0000\u000b8\u0001\u0000"+
		"\u0000\u0000\r^\u0001\u0000\u0000\u0000\u000fz\u0001\u0000\u0000\u0000"+
		"\u0011~\u0001\u0000\u0000\u0000\u0013\u0081\u0001\u0000\u0000\u0000\u0015"+
		"\u0087\u0001\u0000\u0000\u0000\u0017\u008f\u0001\u0000\u0000\u0000\u0019"+
		"\u0095\u0001\u0000\u0000\u0000\u001b\u009c\u0001\u0000\u0000\u0000\u001d"+
		"\u00a8\u0001\u0000\u0000\u0000\u001f \u0005i\u0000\u0000 !\u0005m\u0000"+
		"\u0000!\"\u0005p\u0000\u0000\"#\u0005o\u0000\u0000#$\u0005r\u0000\u0000"+
		"$%\u0005t\u0000\u0000%\u0002\u0001\u0000\u0000\u0000&\'\u0005a\u0000\u0000"+
		"\'(\u0005u\u0000\u0000()\u0005t\u0000\u0000)*\u0005o\u0000\u0000*+\u0005"+
		"m\u0000\u0000+,\u0005a\u0000\u0000,-\u0005t\u0000\u0000-.\u0005o\u0000"+
		"\u0000./\u0005n\u0000\u0000/0\u0005 \u0000\u000001\u0005{\u0000\u0000"+
		"1\u0004\u0001\u0000\u0000\u000023\u0005:\u0000\u00003\u0006\u0001\u0000"+
		"\u0000\u000045\u0005}\u0000\u00005\b\u0001\u0000\u0000\u000067\u0005{"+
		"\u0000\u00007\n\u0001\u0000\u0000\u000089\u0005v\u0000\u00009:\u0005i"+
		"\u0000\u0000:;\u0005e\u0000\u0000;<\u0005w\u0000\u0000<=\u0005p\u0000"+
		"\u0000=>\u0005o\u0000\u0000>?\u0005r\u0000\u0000?@\u0005t\u0000\u0000"+
		"@A\u0005 \u0000\u0000AB\u0005{\u0000\u0000B\f\u0001\u0000\u0000\u0000"+
		"CD\u0005c\u0000\u0000DE\u0005o\u0000\u0000EF\u0005l\u0000\u0000FG\u0005"+
		"o\u0000\u0000G_\u0005r\u0000\u0000HI\u0005s\u0000\u0000IJ\u0005i\u0000"+
		"\u0000JK\u0005z\u0000\u0000K_\u0005e\u0000\u0000LM\u0005f\u0000\u0000"+
		"MN\u0005o\u0000\u0000NO\u0005n\u0000\u0000OP\u0005t\u0000\u0000PQ\u0005"+
		"-\u0000\u0000QR\u0005s\u0000\u0000RS\u0005i\u0000\u0000ST\u0005z\u0000"+
		"\u0000T_\u0005e\u0000\u0000UV\u0005l\u0000\u0000VW\u0005i\u0000\u0000"+
		"WX\u0005n\u0000\u0000XY\u0005e\u0000\u0000YZ\u0005c\u0000\u0000Z[\u0005"+
		"o\u0000\u0000[\\\u0005l\u0000\u0000\\]\u0005o\u0000\u0000]_\u0005r\u0000"+
		"\u0000^C\u0001\u0000\u0000\u0000^H\u0001\u0000\u0000\u0000^L\u0001\u0000"+
		"\u0000\u0000^U\u0001\u0000\u0000\u0000_\u000e\u0001\u0000\u0000\u0000"+
		"`a\u0005b\u0000\u0000ab\u0005a\u0000\u0000bc\u0005c\u0000\u0000cd\u0005"+
		"k\u0000\u0000de\u0005g\u0000\u0000ef\u0005r\u0000\u0000fg\u0005o\u0000"+
		"\u0000gh\u0005u\u0000\u0000hi\u0005n\u0000\u0000i{\u0005d\u0000\u0000"+
		"jk\u0005h\u0000\u0000kl\u0005e\u0000\u0000lm\u0005i\u0000\u0000mn\u0005"+
		"g\u0000\u0000no\u0005h\u0000\u0000o{\u0005t\u0000\u0000pq\u0005w\u0000"+
		"\u0000qr\u0005i\u0000\u0000rs\u0005d\u0000\u0000st\u0005t\u0000\u0000"+
		"t{\u0005h\u0000\u0000uv\u0005t\u0000\u0000vw\u0005i\u0000\u0000wx\u0005"+
		"t\u0000\u0000xy\u0005l\u0000\u0000y{\u0005e\u0000\u0000z`\u0001\u0000"+
		"\u0000\u0000zj\u0001\u0000\u0000\u0000zp\u0001\u0000\u0000\u0000zu\u0001"+
		"\u0000\u0000\u0000{\u0010\u0001\u0000\u0000\u0000|\u007f\u0003\u0019\f"+
		"\u0000}\u007f\u0003\u0015\n\u0000~|\u0001\u0000\u0000\u0000~}\u0001\u0000"+
		"\u0000\u0000\u007f\u0012\u0001\u0000\u0000\u0000\u0080\u0082\u0007\u0000"+
		"\u0000\u0000\u0081\u0080\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000"+
		"\u0000\u0000\u0083\u0081\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000"+
		"\u0000\u0000\u0084\u0085\u0001\u0000\u0000\u0000\u0085\u0086\u0006\t\u0000"+
		"\u0000\u0086\u0014\u0001\u0000\u0000\u0000\u0087\u008b\u0007\u0001\u0000"+
		"\u0000\u0088\u008a\u0007\u0002\u0000\u0000\u0089\u0088\u0001\u0000\u0000"+
		"\u0000\u008a\u008d\u0001\u0000\u0000\u0000\u008b\u0089\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u0016\u0001\u0000\u0000"+
		"\u0000\u008d\u008b\u0001\u0000\u0000\u0000\u008e\u0090\u0005\r\u0000\u0000"+
		"\u008f\u008e\u0001\u0000\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u0092\u0005\n\u0000\u0000\u0092"+
		"\u0093\u0001\u0000\u0000\u0000\u0093\u0094\u0006\u000b\u0000\u0000\u0094"+
		"\u0018\u0001\u0000\u0000\u0000\u0095\u0099\u0007\u0003\u0000\u0000\u0096"+
		"\u0098\u0007\u0004\u0000\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0098"+
		"\u009b\u0001\u0000\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u0099"+
		"\u009a\u0001\u0000\u0000\u0000\u009a\u001a\u0001\u0000\u0000\u0000\u009b"+
		"\u0099\u0001\u0000\u0000\u0000\u009c\u009d\u0007\u0005\u0000\u0000\u009d"+
		"\u00a1\u0007\u0005\u0000\u0000\u009e\u00a0\t\u0000\u0000\u0000\u009f\u009e"+
		"\u0001\u0000\u0000\u0000\u00a0\u00a3\u0001\u0000\u0000\u0000\u00a1\u00a2"+
		"\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000\u0000\u00a2\u00a4"+
		"\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a4\u00a5"+
		"\u0003\u0017\u000b\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00a7"+
		"\u0006\r\u0000\u0000\u00a7\u001c\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005"+
		"/\u0000\u0000\u00a9\u00aa\u0005*\u0000\u0000\u00aa\u00ae\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ad\t\u0000\u0000\u0000\u00ac\u00ab\u0001\u0000\u0000\u0000"+
		"\u00ad\u00b0\u0001\u0000\u0000\u0000\u00ae\u00af\u0001\u0000\u0000\u0000"+
		"\u00ae\u00ac\u0001\u0000\u0000\u0000\u00af\u00b1\u0001\u0000\u0000\u0000"+
		"\u00b0\u00ae\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005*\u0000\u0000\u00b2"+
		"\u00b3\u0005/\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5"+
		"\u0006\u000e\u0000\u0000\u00b5\u001e\u0001\u0000\u0000\u0000\n\u0000^"+
		"z~\u0083\u008b\u008f\u0099\u00a1\u00ae\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}