alphabet {'a', 'b', 'a'}

DFA a2 <<<
    state A, B, C;
    A [initial = true];
    C [accepting = true];
    B [accepting = true];
    for ar in {{A,B,C}} <<< xd [accepting = true]; dx [accepting = false]; >>> 
    
    // BOOLEAN EXPRESSION TESTS
    while 10 > 20 and 20 < 10 do <<< test [accepting = true];>>>

    if 10 == 20 or 10 != 500 do A [slope = 200];

    // erro semantico dentro do while
    while 10 and 20 > 20 or 10 do <<< test [accepting = true];>>>

    // esta transition é um exemplo de um conjunto valido de transições para DFAs
    transition 
        A -> 'a','b' -> B,
        A -> 'c' -> A;
>>>


view v1 of a2 <<<
    point p1 = (A) + 1;     // é suposto dar erro, nao sao 2 pontos
    point p2 = (10,10);
    place D at (4,3);           // erro, estado D nao existe para a2
    place <A,C>#label at (2,1); // não há transição entre A e C
    place <A,B>#label at ABC; // invalid expr no final deste statement (ABC)
    <A,C> as p1 -- p2;      // <A,C> nao existe
>>>
